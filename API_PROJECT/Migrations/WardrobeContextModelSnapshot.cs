// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WardrobeAPI.Data;

#nullable disable

namespace WardrobeAPI.Migrations
{
    [DbContext(typeof(WardrobeContext))]
    partial class WardrobeContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WardrobeAPI.Models.Dress", b =>
                {
                    b.Property<int>("DressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DressId"));

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Season")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Size")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Style")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WardrobeId")
                        .HasColumnType("int");

                    b.HasKey("DressId");

                    b.HasIndex("WardrobeId");

                    b.ToTable("Dresses");

                    b.HasData(
                        new
                        {
                            DressId = 1,
                            Color = "Red",
                            Name = "Red Dress",
                            Season = "Summer",
                            Size = "M",
                            Style = "Casual",
                            WardrobeId = 1
                        },
                        new
                        {
                            DressId = 2,
                            Color = "Blue",
                            Name = "Blue Dress",
                            Season = "Winter",
                            Size = "L",
                            Style = "Formal",
                            WardrobeId = 2
                        });
                });

            modelBuilder.Entity("WardrobeAPI.Models.Outfit", b =>
                {
                    b.Property<int>("OutfitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OutfitId"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Occasion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Season")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Style")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WardrobeId")
                        .HasColumnType("int");

                    b.HasKey("OutfitId");

                    b.ToTable("Outfits");

                    b.HasData(
                        new
                        {
                            OutfitId = 1,
                            Name = "Summer Party",
                            Occasion = "Party",
                            Season = "Summer",
                            Style = "Casual",
                            WardrobeId = 0
                        });
                });

            modelBuilder.Entity("WardrobeAPI.Models.OutfitDress", b =>
                {
                    b.Property<int>("OutfitId")
                        .HasColumnType("int");

                    b.Property<int>("DressId")
                        .HasColumnType("int");

                    b.HasKey("OutfitId", "DressId");

                    b.HasIndex("DressId");

                    b.ToTable("OutfitDresses");

                    b.HasData(
                        new
                        {
                            OutfitId = 1,
                            DressId = 1
                        });
                });

            modelBuilder.Entity("WardrobeAPI.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Email = "alice@example.com",
                            Name = "Alice",
                            Password = "pass123",
                            Role = "Admin"
                        },
                        new
                        {
                            UserId = 2,
                            Email = "bob@example.com",
                            Name = "Bob",
                            Password = "pass456",
                            Role = "User"
                        });
                });

            modelBuilder.Entity("WardrobeAPI.Models.Wardrobe", b =>
                {
                    b.Property<int>("WardrobeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WardrobeId"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("WardrobeId");

                    b.HasIndex("UserId");

                    b.ToTable("Wardrobes");

                    b.HasData(
                        new
                        {
                            WardrobeId = 1,
                            Name = "Alice's Wardrobe",
                            UserId = 1
                        },
                        new
                        {
                            WardrobeId = 2,
                            Name = "Bob's Wardrobe",
                            UserId = 2
                        });
                });

            modelBuilder.Entity("WardrobeAPI.Models.Dress", b =>
                {
                    b.HasOne("WardrobeAPI.Models.Wardrobe", "Wardrobe")
                        .WithMany("Dresses")
                        .HasForeignKey("WardrobeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Wardrobe");
                });

            modelBuilder.Entity("WardrobeAPI.Models.OutfitDress", b =>
                {
                    b.HasOne("WardrobeAPI.Models.Dress", "Dress")
                        .WithMany("OutfitDresses")
                        .HasForeignKey("DressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WardrobeAPI.Models.Outfit", "Outfit")
                        .WithMany("OutfitDresses")
                        .HasForeignKey("OutfitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dress");

                    b.Navigation("Outfit");
                });

            modelBuilder.Entity("WardrobeAPI.Models.Wardrobe", b =>
                {
                    b.HasOne("WardrobeAPI.Models.User", "User")
                        .WithMany("Wardrobes")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("WardrobeAPI.Models.Dress", b =>
                {
                    b.Navigation("OutfitDresses");
                });

            modelBuilder.Entity("WardrobeAPI.Models.Outfit", b =>
                {
                    b.Navigation("OutfitDresses");
                });

            modelBuilder.Entity("WardrobeAPI.Models.User", b =>
                {
                    b.Navigation("Wardrobes");
                });

            modelBuilder.Entity("WardrobeAPI.Models.Wardrobe", b =>
                {
                    b.Navigation("Dresses");
                });
#pragma warning restore 612, 618
        }
    }
}
